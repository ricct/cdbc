{
    "docs": [
        {
            "location": "/home/",
            "text": "About CDBC\n\n\n\n\nCDBC can provide proxy access to Cloud Database. It consists of CDBC Client and CDBC Service.CDBC Client connect to CDBC Service which can provide proxy access to Database.\nCDBC Service use WCF and run on Microsoft IIS so Windows instance on cloud is needed. \n\n\n\nHow to get CDBC\n\n\n\n\nYou can download CDBC service and client from following page. \n\nhttps://cdbc.cloud/download.html\n\n\nYou can also get CDBC client from NuGet .",
            "title": "Getting Started"
        },
        {
            "location": "/home/#about-cdbc",
            "text": "CDBC can provide proxy access to Cloud Database. It consists of CDBC Client and CDBC Service.CDBC Client connect to CDBC Service which can provide proxy access to Database.\nCDBC Service use WCF and run on Microsoft IIS so Windows instance on cloud is needed.",
            "title": "About CDBC"
        },
        {
            "location": "/home/#how-to-get-cdbc",
            "text": "You can download CDBC service and client from following page.  https://cdbc.cloud/download.html  You can also get CDBC client from NuGet .",
            "title": "How to get CDBC"
        },
        {
            "location": "/SetupService/installiis/",
            "text": "install IIS\n\n\n\n\n\n\nOpen Server Manager\n\n\nClick the \u201cAdd roles and features\u201d text.\n\n\n\n\nOn the \u201cBefore you begin\u201d window, click the Next button.\n\n\n\nOn the \"Select installation type\" window, leave \u201cRole-based or feature-based installation\u201d selected and click Next.\n\n\n\nAs we're installing to our local machine, leave \u201cSelect a server from the server pool\u201d with the current machine selected and click Next.\n\n\n\n\nFrom the \"Select server roles\" window, check the box next to \u201cWeb Server (IIS)\u201d. \n\n   When additional features and feature wizard window pop up, click the \u201cAdd Features\u201d button.\n\n   Click Next after back to \"Select server roles\" window\n\n\n\nIn the \"features\" window, Click \".NET framework 4.6 features\",  check  \"ASP.NET 4.6\" and  \"WCF Services\" - \"HTTP activation\".\n\n   When additional features and feature wizard window pop up, click the \u201cAdd Features\u201d button. \n\n   Click Next after back to \"features\" window\n\n\n\nClick Next on the \u201cWeb Server Role (IIS)\u201d window.\n\n\n\nIn the \"Select role services\" window, Check \"ASP.NET 4.6\" under \"application development\" . Click Next.\n\n\n\nFinally on the \u201cConfirm installation selections\u201d window , review the items that are to be installed and click Install.\n\n\n\nOnce the installation has succeeded, click the close button.\n\n\n\nWe can perform test by opening up a web browser and browsing to the server that we have installed IIS on. You should see the default IIS page.",
            "title": "Install IIS"
        },
        {
            "location": "/SetupService/installiis/#install-iis",
            "text": "Open Server Manager  Click the \u201cAdd roles and features\u201d text.   On the \u201cBefore you begin\u201d window, click the Next button.  On the \"Select installation type\" window, leave \u201cRole-based or feature-based installation\u201d selected and click Next.  As we're installing to our local machine, leave \u201cSelect a server from the server pool\u201d with the current machine selected and click Next.   From the \"Select server roles\" window, check the box next to \u201cWeb Server (IIS)\u201d.  \n   When additional features and feature wizard window pop up, click the \u201cAdd Features\u201d button. \n   Click Next after back to \"Select server roles\" window  In the \"features\" window, Click \".NET framework 4.6 features\",  check  \"ASP.NET 4.6\" and  \"WCF Services\" - \"HTTP activation\". \n   When additional features and feature wizard window pop up, click the \u201cAdd Features\u201d button.  \n   Click Next after back to \"features\" window  Click Next on the \u201cWeb Server Role (IIS)\u201d window.  In the \"Select role services\" window, Check \"ASP.NET 4.6\" under \"application development\" . Click Next.  Finally on the \u201cConfirm installation selections\u201d window , review the items that are to be installed and click Install.  Once the installation has succeeded, click the close button.  We can perform test by opening up a web browser and browsing to the server that we have installed IIS on. You should see the default IIS page.",
            "title": "install IIS"
        },
        {
            "location": "/SetupService/deployservice/",
            "text": "Setup IIS  to CDBC\n\n\n\n\nSetup CDBC service\n\n\n\n\nSetup CDBC service\n\n\nInstall CDBC client\n\n\nUsing CDBC.client\n\n\n\n\nQuerying with the DataReader\n\n\n\n\nQuerying with the DataAdapter\n\n\nQuerying with the DataAdapter\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Deploy CDBC service"
        },
        {
            "location": "/SetupService/deployservice/#setup-iis-to-cdbc",
            "text": "",
            "title": "Setup IIS  to CDBC"
        },
        {
            "location": "/SetupService/deployservice/#setup-cdbc-service",
            "text": "",
            "title": "Setup CDBC service"
        },
        {
            "location": "/SetupService/deployservice/#setup-cdbc-service_1",
            "text": "",
            "title": "Setup CDBC service"
        },
        {
            "location": "/SetupService/deployservice/#install-cdbc-client",
            "text": "",
            "title": "Install CDBC client"
        },
        {
            "location": "/SetupService/deployservice/#using-cdbcclient",
            "text": "",
            "title": "Using CDBC.client"
        },
        {
            "location": "/SetupService/deployservice/#querying-with-the-datareader",
            "text": "",
            "title": "Querying with the DataReader"
        },
        {
            "location": "/SetupService/deployservice/#querying-with-the-dataadapter",
            "text": "",
            "title": "Querying with the DataAdapter"
        },
        {
            "location": "/SetupService/deployservice/#querying-with-the-dataadapter_1",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Querying with the DataAdapter"
        },
        {
            "location": "/SetupService/deployservice/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/SetupService/configservice/",
            "text": "Setup IIS  to CDBC\n\n\n\n\nSetup CDBC service\n\n\n\n\nSetup CDBC service\n\n\nInstall CDBC client\n\n\nUsing CDBC.client\n\n\n\n\nQuerying with the DataReader\n\n\n\n\nQuerying with the DataAdapter\n\n\nQuerying with the DataAdapter\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Config CDBC service"
        },
        {
            "location": "/SetupService/configservice/#setup-iis-to-cdbc",
            "text": "",
            "title": "Setup IIS  to CDBC"
        },
        {
            "location": "/SetupService/configservice/#setup-cdbc-service",
            "text": "",
            "title": "Setup CDBC service"
        },
        {
            "location": "/SetupService/configservice/#setup-cdbc-service_1",
            "text": "",
            "title": "Setup CDBC service"
        },
        {
            "location": "/SetupService/configservice/#install-cdbc-client",
            "text": "",
            "title": "Install CDBC client"
        },
        {
            "location": "/SetupService/configservice/#using-cdbcclient",
            "text": "",
            "title": "Using CDBC.client"
        },
        {
            "location": "/SetupService/configservice/#querying-with-the-datareader",
            "text": "",
            "title": "Querying with the DataReader"
        },
        {
            "location": "/SetupService/configservice/#querying-with-the-dataadapter",
            "text": "",
            "title": "Querying with the DataAdapter"
        },
        {
            "location": "/SetupService/configservice/#querying-with-the-dataadapter_1",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Querying with the DataAdapter"
        },
        {
            "location": "/SetupService/configservice/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/UsingCDBCClient/ClientConfiguration/",
            "text": "CDBC Client Configuration\n\n\n\n\nCDBC Service use WCF architecture. WCF information should be set in the app.config file.\n\n\nSample XML\n\n\n\n\n<system.serviceModel>\n    <bindings>\n      <webHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"/>\n      </webHttpBinding>\n      <basicHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"\n                 sendTimeout=\"00:10:00\"\n                     />\n      </basicHttpBinding>\n    </bindings>\n    <client>\n      <endpoint address=\"https://cdbc.cloud/cdbcservice/CdbcService.svc/service\" binding=\"basicHttpBinding\" bindingConfiguration=\"BasicHttpBinding_ICdbcService\"\n          contract=\"CdbcService.ICdbcService\" name=\"CdbcService.ICdbcService\"  />\n    </client>\n    <behaviors>\n      <endpointBehaviors>\n        <behavior name=\"webhttp\">\n          <webHttp/>\n          <soapProcessing />\n        </behavior>\n      </endpointBehaviors>\n    </behaviors>\n  </system.serviceModel>\n\n\n\n\nclient-endpoint\n\n* \naddress\n - URL of CDBC service.\n\n\nDetails",
            "title": "Client Configuration"
        },
        {
            "location": "/UsingCDBCClient/ClientConfiguration/#cdbc-client-configuration",
            "text": "CDBC Service use WCF architecture. WCF information should be set in the app.config file.",
            "title": "CDBC Client Configuration"
        },
        {
            "location": "/UsingCDBCClient/ClientConfiguration/#sample-xml",
            "text": "<system.serviceModel>\n    <bindings>\n      <webHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"/>\n      </webHttpBinding>\n      <basicHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"\n                 sendTimeout=\"00:10:00\"\n                     />\n      </basicHttpBinding>\n    </bindings>\n    <client>\n      <endpoint address=\"https://cdbc.cloud/cdbcservice/CdbcService.svc/service\" binding=\"basicHttpBinding\" bindingConfiguration=\"BasicHttpBinding_ICdbcService\"\n          contract=\"CdbcService.ICdbcService\" name=\"CdbcService.ICdbcService\"  />\n    </client>\n    <behaviors>\n      <endpointBehaviors>\n        <behavior name=\"webhttp\">\n          <webHttp/>\n          <soapProcessing />\n        </behavior>\n      </endpointBehaviors>\n    </behaviors>\n  </system.serviceModel>  client-endpoint \n*  address  - URL of CDBC service.",
            "title": "Sample XML"
        },
        {
            "location": "/UsingCDBCClient/ClientConfiguration/#details",
            "text": "",
            "title": "Details"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/",
            "text": "CDBC Client Configuration\n\n\n\n\nCDBC Service use WCF architecture. WCF information should be set in the app.config file.\n\n\n<system.serviceModel>\n    <bindings>\n      <webHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"/>\n      </webHttpBinding>\n      <basicHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"\n                 sendTimeout=\"00:10:00\"\n                     />\n      </basicHttpBinding>\n    </bindings>\n    <client>\n      <endpoint address=\"https://cdbc.cloud/cdbcservice/CdbcService.svc/service\" binding=\"basicHttpBinding\" bindingConfiguration=\"BasicHttpBinding_ICdbcService\"\n          contract=\"CdbcService.ICdbcService\" name=\"CdbcService.ICdbcService\"  />\n    </client>\n    <behaviors>\n      <endpointBehaviors>\n        <behavior name=\"webhttp\">\n          <webHttp/>\n          <soapProcessing />\n        </behavior>\n      </endpointBehaviors>\n    </behaviors>\n  </system.serviceModel>\n\n\n\n\nclient-endpoint\n\n* \naddress\n - URL of CDBC service.\n\n\nCreating CdbcConnection\n\n\n\n\nC#\n\n\n//Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";\n\n\n\n\n\nQuerying with the DataReader\n\n\n\n\n\n\nC#\n\n\n//Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";\n\nCdbcCommand cmd = new CdbcCommand(\"SELECT * FROM ALL_TABLES\", conn);\nDbDataReader dr = cmd.ExecuteReader();\n\nwhile (dr.Read())\n{\n    Console.WriteLine(String.Format(\"{0}\", dr[0]));\n}\n\n\n\n\nVB.Net\n\n\nstring connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}\n\n\n\n\nQuerying with the DataAdapter\n\n\n\n\nCdbcAdapter's Fill method can retrieve data from the data source having save  syntax with other sql client.  \n\n\nC#\n\n\nstring connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}\n\n\n\n\nVB.Net\n\n\nstring connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}\n\n\n\n\nUpdate with the DataAdapter\n\n\n\n\nExecuteNonQuery with the CdbcCommand\n\n\n\n\nExecuteScalar with the CdbcCommand\n\n\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "How to access Oracle"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#cdbc-client-configuration",
            "text": "CDBC Service use WCF architecture. WCF information should be set in the app.config file.  <system.serviceModel>\n    <bindings>\n      <webHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"/>\n      </webHttpBinding>\n      <basicHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"\n                 sendTimeout=\"00:10:00\"\n                     />\n      </basicHttpBinding>\n    </bindings>\n    <client>\n      <endpoint address=\"https://cdbc.cloud/cdbcservice/CdbcService.svc/service\" binding=\"basicHttpBinding\" bindingConfiguration=\"BasicHttpBinding_ICdbcService\"\n          contract=\"CdbcService.ICdbcService\" name=\"CdbcService.ICdbcService\"  />\n    </client>\n    <behaviors>\n      <endpointBehaviors>\n        <behavior name=\"webhttp\">\n          <webHttp/>\n          <soapProcessing />\n        </behavior>\n      </endpointBehaviors>\n    </behaviors>\n  </system.serviceModel>  client-endpoint \n*  address  - URL of CDBC service.",
            "title": "CDBC Client Configuration"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#creating-cdbcconnection",
            "text": "C#  //Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";",
            "title": "Creating CdbcConnection"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#querying-with-the-datareader",
            "text": "C#  //Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";\n\nCdbcCommand cmd = new CdbcCommand(\"SELECT * FROM ALL_TABLES\", conn);\nDbDataReader dr = cmd.ExecuteReader();\n\nwhile (dr.Read())\n{\n    Console.WriteLine(String.Format(\"{0}\", dr[0]));\n}  VB.Net  string connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}",
            "title": "Querying with the DataReader"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#querying-with-the-dataadapter",
            "text": "CdbcAdapter's Fill method can retrieve data from the data source having save  syntax with other sql client.    C#  string connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}  VB.Net  string connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}",
            "title": "Querying with the DataAdapter"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#update-with-the-dataadapter",
            "text": "",
            "title": "Update with the DataAdapter"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#executenonquery-with-the-cdbccommand",
            "text": "",
            "title": "ExecuteNonQuery with the CdbcCommand"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#executescalar-with-the-cdbccommand",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "ExecuteScalar with the CdbcCommand"
        },
        {
            "location": "/UsingCDBCClient/UsingClientOracle/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/",
            "text": "CDBC Client Configuration\n\n\n\n\nCDBC Service use WCF architecture. WCF information should be set in the app.config file.\n\n\n<system.serviceModel>\n    <bindings>\n      <webHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"/>\n      </webHttpBinding>\n      <basicHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"\n                 sendTimeout=\"00:10:00\"\n                     />\n      </basicHttpBinding>\n    </bindings>\n    <client>\n      <endpoint address=\"https://cdbc.cloud/cdbcservice/CdbcService.svc/service\" binding=\"basicHttpBinding\" bindingConfiguration=\"BasicHttpBinding_ICdbcService\"\n          contract=\"CdbcService.ICdbcService\" name=\"CdbcService.ICdbcService\"  />\n    </client>\n    <behaviors>\n      <endpointBehaviors>\n        <behavior name=\"webhttp\">\n          <webHttp/>\n          <soapProcessing />\n        </behavior>\n      </endpointBehaviors>\n    </behaviors>\n  </system.serviceModel>\n\n\n\n\nclient-endpoint\n\n* \naddress\n - URL of CDBC service.\n\n\nCreating CdbcConnection\n\n\n\n\nC#\n\n\n//Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";\n\n\n\n\n\nQuerying with the DataReader\n\n\n\n\n\n\nC#\n\n\n//Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";\n\nCdbcCommand cmd = new CdbcCommand(\"SELECT * FROM ALL_TABLES\", conn);\nDbDataReader dr = cmd.ExecuteReader();\n\nwhile (dr.Read())\n{\n    Console.WriteLine(String.Format(\"{0}\", dr[0]));\n}\n\n\n\n\nVB.Net\n\n\nstring connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}\n\n\n\n\nQuerying with the DataAdapter\n\n\n\n\nCdbcAdapter's Fill method can retrieve data from the data source having save  syntax with other sql client.  \n\n\nC#\n\n\nstring connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}\n\n\n\n\nVB.Net\n\n\nstring connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}\n\n\n\n\nUpdate with the DataAdapter\n\n\n\n\nExecuteNonQuery with the CdbcCommand\n\n\n\n\nExecuteScalar with the CdbcCommand\n\n\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "How to access SQL Server"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#cdbc-client-configuration",
            "text": "CDBC Service use WCF architecture. WCF information should be set in the app.config file.  <system.serviceModel>\n    <bindings>\n      <webHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"/>\n      </webHttpBinding>\n      <basicHttpBinding>\n        <binding name=\"BasicHttpBinding_ICdbcService\" maxReceivedMessageSize=\"10485760\" useDefaultWebProxy=\"false\"\n                 sendTimeout=\"00:10:00\"\n                     />\n      </basicHttpBinding>\n    </bindings>\n    <client>\n      <endpoint address=\"https://cdbc.cloud/cdbcservice/CdbcService.svc/service\" binding=\"basicHttpBinding\" bindingConfiguration=\"BasicHttpBinding_ICdbcService\"\n          contract=\"CdbcService.ICdbcService\" name=\"CdbcService.ICdbcService\"  />\n    </client>\n    <behaviors>\n      <endpointBehaviors>\n        <behavior name=\"webhttp\">\n          <webHttp/>\n          <soapProcessing />\n        </behavior>\n      </endpointBehaviors>\n    </behaviors>\n  </system.serviceModel>  client-endpoint \n*  address  - URL of CDBC service.",
            "title": "CDBC Client Configuration"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#creating-cdbcconnection",
            "text": "C#  //Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";",
            "title": "Creating CdbcConnection"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#querying-with-the-datareader",
            "text": "C#  //Same as ODP.net,  \nstring connString = \"Data Source=(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = ***.***.***.***)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ***)));Persist Security Info=True;User ID=*;Password=*\";\nCdbcConnection conn = new CdbcConnection(connString);\n\nconn.DatabaseProduct = CdbcCommon.Data.Client.Type.DatabaseProductType.Oracle;\nconn.UserId = \"unittest\";\nconn.Psk = \"***************\";\n\nCdbcCommand cmd = new CdbcCommand(\"SELECT * FROM ALL_TABLES\", conn);\nDbDataReader dr = cmd.ExecuteReader();\n\nwhile (dr.Read())\n{\n    Console.WriteLine(String.Format(\"{0}\", dr[0]));\n}  VB.Net  string connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}",
            "title": "Querying with the DataReader"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#querying-with-the-dataadapter",
            "text": "CdbcAdapter's Fill method can retrieve data from the data source having save  syntax with other sql client.    C#  string connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}  VB.Net  string connectionString = \"DataSource=C:\\\\My.accdb\";\n\nusing (AccessConnection connection = new AccessConnection(connectionString)) {\n  AccessCommand cmd = new AccessCommand(\"SELECT * FROM Orders\", connection);\n\n  AccessDataReader rdr = cmd.ExecuteReader();\n\n  while (rdr.Read()) {\n    Console.WriteLine(String.Format(\"\\t{0} --> \\t\\t{1}\", rdr[\"ShipName\"], rdr[\"ShipCity\"]));\n  }\n}",
            "title": "Querying with the DataAdapter"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#update-with-the-dataadapter",
            "text": "",
            "title": "Update with the DataAdapter"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#executenonquery-with-the-cdbccommand",
            "text": "",
            "title": "ExecuteNonQuery with the CdbcCommand"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#executescalar-with-the-cdbccommand",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "ExecuteScalar with the CdbcCommand"
        },
        {
            "location": "/UsingCDBCClient/UsingClientSqlServer/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/SupportedApi/OracleSupported/",
            "text": "About connecting to Oracle\n\n\nCDBC client offers easy access to remote Oracle database from .NET applications.\nIt has the similar ADO.NET architecture as ODP.NET.\nCode with familiar classes , properties and methods.\nBut it does not support all functions of ODP.NET.\nSupported properties and methods are listed below.\n\n\nVersion\n\n\nCdbcConnection\n\n\nSupported\n\n\nCdbcCommand\n\n\nCdbcAdapter\n\n\nCdbcCommandBuilder",
            "title": "Oracle"
        },
        {
            "location": "/SupportedApi/OracleSupported/#about-connecting-to-oracle",
            "text": "CDBC client offers easy access to remote Oracle database from .NET applications.\nIt has the similar ADO.NET architecture as ODP.NET.\nCode with familiar classes , properties and methods.\nBut it does not support all functions of ODP.NET.\nSupported properties and methods are listed below.",
            "title": "About connecting to Oracle"
        },
        {
            "location": "/SupportedApi/OracleSupported/#version",
            "text": "",
            "title": "Version"
        },
        {
            "location": "/SupportedApi/OracleSupported/#cdbcconnection",
            "text": "Supported",
            "title": "CdbcConnection"
        },
        {
            "location": "/SupportedApi/OracleSupported/#cdbccommand",
            "text": "",
            "title": "CdbcCommand"
        },
        {
            "location": "/SupportedApi/OracleSupported/#cdbcadapter",
            "text": "",
            "title": "CdbcAdapter"
        },
        {
            "location": "/SupportedApi/OracleSupported/#cdbccommandbuilder",
            "text": "",
            "title": "CdbcCommandBuilder"
        },
        {
            "location": "/SupportedApi/SqlServerSupported/",
            "text": "About connecting to SQL Server\n\n\nCDBC client offers easy access to remote Oracle database from .NET applications.\nIt has the similar ADO.NET architecture as ODP.NET.\nCode with familiar classes , properties and methods.\nBut it does not support all functions of ODP.NET.\nSupported properties and methods are listed below.\n\n\nVersion\n\n\nCdbcConnection\n\n\nSupported\n\n\nCdbcCommand\n\n\nCdbcAdapter\n\n\nCdbcCommandBuilder",
            "title": "SQL Server"
        },
        {
            "location": "/SupportedApi/SqlServerSupported/#about-connecting-to-sql-server",
            "text": "CDBC client offers easy access to remote Oracle database from .NET applications.\nIt has the similar ADO.NET architecture as ODP.NET.\nCode with familiar classes , properties and methods.\nBut it does not support all functions of ODP.NET.\nSupported properties and methods are listed below.",
            "title": "About connecting to SQL Server"
        },
        {
            "location": "/SupportedApi/SqlServerSupported/#version",
            "text": "",
            "title": "Version"
        },
        {
            "location": "/SupportedApi/SqlServerSupported/#cdbcconnection",
            "text": "Supported",
            "title": "CdbcConnection"
        },
        {
            "location": "/SupportedApi/SqlServerSupported/#cdbccommand",
            "text": "",
            "title": "CdbcCommand"
        },
        {
            "location": "/SupportedApi/SqlServerSupported/#cdbcadapter",
            "text": "",
            "title": "CdbcAdapter"
        },
        {
            "location": "/SupportedApi/SqlServerSupported/#cdbccommandbuilder",
            "text": "",
            "title": "CdbcCommandBuilder"
        },
        {
            "location": "/language/",
            "text": "Languages\n\n\nEnglish\n\n\n\u65e5\u672c\u8a9e",
            "title": "Language"
        },
        {
            "location": "/language/#languages",
            "text": "English  \u65e5\u672c\u8a9e",
            "title": "Languages"
        }
    ]
}